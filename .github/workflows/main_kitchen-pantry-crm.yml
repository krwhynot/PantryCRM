# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - kitchen-pantry-crm

on:
  push:
    branches:
      - main
  workflow_dispatch:

# Required permissions for OIDC authentication
permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up Node.js version
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Clean npm cache
        run: npm cache clean --force
      
      - name: npm install, build, and test
        run: |
          npm ci --legacy-peer-deps --prefer-offline --no-audit --no-fund
          npm run build:azure --if-present
        env:
          NODE_ENV: production
          CI: true
          NEXT_TELEMETRY_DISABLED: 1
          DATABASE_URL: "postgresql://dummy:dummy@localhost:5432/dummy"
          GOOGLE_ID: "dummy"
          GOOGLE_SECRET: "dummy"
          GITHUB_ID: "dummy"
          GITHUB_SECRET: "dummy"
          JWT_SECRET: "dummy-secret-for-build"

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@89ef406dd8d7e03cfd12d9e0a4a378f454709029 # v4.3.5
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      # Azure Login using OIDC (more secure than publish profiles)
      - name: "üîê Azure Login"
        uses: azure/login@6b2456866fc08b011acb422a92a4aa20e2c4de32 # v2.1.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@de617f46172a906d0617bb0e50d81e9e3aec24c8 # v3.0.1
        with:
          app-name: 'kitchen-pantry-crm'
          slot-name: 'Production'
          package: .
      
      # Health check after deployment
      - name: "‚ù§Ô∏è Health Check"
        run: |
          echo "Performing health check..."
          sleep 30  # Wait for deployment to settle
          curl -f "https://kitchen-pantry-crm.azurewebsites.net/api/health" || {
            echo "‚ùå Health check failed"
            exit 1
          }
          echo "‚úÖ Deployment is healthy"