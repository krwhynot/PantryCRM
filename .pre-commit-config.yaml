# Pre-commit hooks configuration for PantryCRM
# Ensures code quality and security before commits

repos:
  # Secret scanning with TruffleHog
  - repo: https://github.com/trufflesecurity/trufflehog
    rev: v3.63.2
    hooks:
      - id: trufflehog
        name: TruffleHog Secret Scanner
        description: Detect hardcoded secrets
        entry: trufflehog
        language: system
        stages: [commit, push]
        args:
          - --config=.trufflehog.yml
          - filesystem
          - --directory=.
          - --fail
        
  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
        
      - id: end-of-file-fixer
        name: Fix End of Files
        
      - id: check-merge-conflict
        name: Check for Merge Conflicts
        
      - id: check-case-conflict
        name: Check for Case Conflicts
        
      - id: check-json
        name: Check JSON Syntax
        
      - id: check-yaml
        name: Check YAML Syntax
        args: [--multi]
        
      - id: check-toml
        name: Check TOML Syntax
        
      - id: check-added-large-files
        name: Check for Large Files
        args: [--maxkb=1024]
        
      - id: detect-private-key
        name: Detect Private Keys
        
      - id: forbid-new-submodules
        name: Forbid New Submodules

  # Environment file validation
  - repo: local
    hooks:
      - id: check-env-files
        name: Check Environment Files
        entry: bash
        language: system
        pass_filenames: false
        args:
          - -c
          - |
            # Check for accidentally committed .env files
            if find . -name "*.env" -not -path "./node_modules/*" -not -name "*.env.example" -not -name "*.env.*.example" | grep -q .; then
              echo "❌ Found .env files that should not be committed:"
              find . -name "*.env" -not -path "./node_modules/*" -not -name "*.env.example" -not -name "*.env.*.example"
              echo "Please add these to .gitignore and remove from git tracking"
              exit 1
            fi
            echo "✅ No uncommitted .env files found"

  # TypeScript and JavaScript linting
  - repo: local
    hooks:
      - id: eslint
        name: ESLint
        entry: npx eslint
        language: system
        types: [javascript, jsx, ts, tsx]
        args: [--fix]
        
      - id: prettier
        name: Prettier
        entry: npx prettier
        language: system
        types: [javascript, jsx, ts, tsx, json, yaml, markdown]
        args: [--write]

  # TypeScript type checking
  - repo: local
    hooks:
      - id: typescript-check
        name: TypeScript Check
        entry: npx tsc
        language: system
        args: [--noEmit]
        files: \.(ts|tsx)$
        pass_filenames: false

  # Package.json validation
  - repo: local
    hooks:
      - id: package-json-lint
        name: Package.json Lint
        entry: bash
        language: system
        files: package\.json$
        args:
          - -c
          - |
            # Validate package.json structure
            if ! node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"; then
              echo "❌ Invalid package.json format"
              exit 1
            fi
            echo "✅ package.json is valid"

# Configuration
default_stages: [commit]
fail_fast: true
minimum_pre_commit_version: 3.0.0

# CI integration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks
    
    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false